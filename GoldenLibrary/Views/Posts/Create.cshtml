@model PostCreateViewModel

<div class="container mt-4">
    <div class="save-status" id="saveStatus"></div>
    
    @if (Model?.PostId > 0)
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            You're working on a draft. Your changes are saved automatically.
        </div>
    }
    
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="bg-white p-5 shadow-sm rounded">
                <h1 class="display-6 mb-4 text-golden">Write your story</h1>

                <form id="storyForm" asp-action="Create" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="PostId" id="postId" />
                    @Html.AntiForgeryToken()
                    
                    <div class="mb-4">
                        <input type="text" class="form-control form-control-lg border-0 fw-bold title-input"
                               id="Title" name="Title" value="@Model?.Title"
                               placeholder="Title" style="font-size: 2rem;">
                    </div>

                    <div class="mb-4">
                        <textarea class="form-control border-0 description-input"
                                  id="Description" name="Description"
                                  rows="3" placeholder="Write a brief description...">@Model?.Description</textarea>
                    </div>

                    <div class="mb-4">
                        <textarea class="form-control border-0 content-input"
                                  id="Content" name="Content"
                                  rows="12" placeholder="Tell your story...">@Model?.Content</textarea>
                    </div>

                    <div class="mb-4">
                        <label for="Url" class="form-label text-muted">URL Slug</label>
                        <div class="input-group">
                            <span class="input-group-text bg-light text-muted">/posts/details/</span>
                            <input type="text" class="form-control url-input" id="Url" name="Url" value="@Model?.Url">
                        </div>
                        <small class="text-muted">This will be the URL of your story. Leave blank to auto-generate.</small>
                    </div>

                    <div class="my-4">
                        <label class="form-label text-muted">Cover Image</label>
                        <div class="d-flex align-items-center">
                            <label for="Image" class="upload-area border rounded p-3 me-3 text-center cursor-pointer" style="width: 100px; height: 100px;">
                                <i class="bi bi-image text-golden fs-2"></i>
                                <div class="small text-muted mt-1">Add cover</div>
                                <input type="file" id="Image" name="ImageFile" class="d-none">
                            </label>
                            <div>
                                <p class="mb-0">Add a high-quality image to your story to capture people's interest.</p>
                                <small class="text-muted">Recommended: 1200 x 600px</small>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label class="form-label text-muted">Topics</label>
                        <div class="d-flex flex-wrap gap-2">
                            @if (ViewBag.Tags != null)
                            {
                                @foreach (var tag in ViewBag.Tags)
                                {
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input tag-input" 
                                               name="tagIds" value="@tag.TagId"
                                               @(Model?.Tags != null && Model.Tags.Any(t => t.TagId == tag.TagId) ? "checked" : "")>
                                        <label class="form-check-label">@tag.Text</label>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-5">
                        <a href="/posts/drafts" class="btn btn-outline-secondary rounded-pill px-4">Back to Drafts</a>
                        <div>
                            <button type="submit" name="action" value="publish" class="btn btn-golden rounded-pill px-4">
                                <i class="bi bi-send me-1"></i> Publish
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="sticky-top" style="top: 100px;">
                <div class="sidebar-container">
                    <h4 class="sidebar-title">Writing Tips</h4>
                    <ul class="list-unstyled">
                        <li class="mb-3">
                            <i class="bi bi-lightbulb text-golden me-2"></i>
                            Start with a compelling title
                        </li>
                        <li class="mb-3">
                            <i class="bi bi-lightbulb text-golden me-2"></i>
                            Use your unique voice and perspective
                        </li>
                        <li class="mb-3">
                            <i class="bi bi-lightbulb text-golden me-2"></i>
                            Include relevant images to enhance engagement
                        </li>
                        <li class="mb-3">
                            <i class="bi bi-lightbulb text-golden me-2"></i>
                            Proofread before publishing
                        </li>
                    </ul>
                </div>

                <div class="sidebar-container mt-4">
                    <h4 class="sidebar-title">Writing Tools</h4>
                    <ul class="list-unstyled">
                        <li class="mb-3">
                            <a href="#" class="text-decoration-none d-flex align-items-center">
                                <i class="bi bi-book text-golden me-2"></i>
                                <span>Style Guide</span>
                            </a>
                        </li>
                        <li class="mb-3">
                            <a href="#" class="text-decoration-none d-flex align-items-center">
                                <i class="bi bi-card-text text-golden me-2"></i>
                                <span>Grammar Help</span>
                            </a>
                        </li>
                        <li class="mb-3">
                            <a href="#" class="text-decoration-none d-flex align-items-center">
                                <i class="bi bi-chat-quote text-golden me-2"></i>
                                <span>Writing Prompts</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .form-control:focus {
        box-shadow: none;
        border-color: #d4af37;
    }

    .upload-area {
        cursor: pointer;
        transition: all 0.2s;
    }

    .upload-area:hover {
        background-color: #f8f9fa;
        border-color: #d4af37 !important;
    }

    .auto-save-notification {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #2e7d32;
        color: white;
        padding: 10px 15px;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        z-index: 1000;
        animation: fadeIn 0.3s, fadeOut 0.3s 2.7s;
    }
    
    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    @@keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }
    
    .btn-outline-golden {
        color: #d4af37;
        border-color: #d4af37;
    }
    
    .btn-outline-golden:hover {
        background-color: #d4af37;
        color: white;
    }

    .save-status {
        position: fixed;
        bottom: 20px;
        right: 20px;
        padding: 8px 15px;
        border-radius: 4px;
        font-size: 14px;
        z-index: 1000;
        transition: opacity 0.3s ease-in-out;
        opacity: 0;
        background-color: #f8f9fa;
        color: #6c757d;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .save-status.saving {
        opacity: 1;
        background-color: #e9ecef;
        color: #495057;
    }
    
    .save-status.saved {
        opacity: 1;
        background-color: #d4edda;
        color: #155724;
    }
    
    .save-status.error {
        opacity: 1;
        background-color: #f8d7da;
        color: #721c24;
    }
    
    .title-input:focus,
    .description-input:focus,
    .content-input:focus {
        outline: none;
        box-shadow: none;
    }
</style>

@section Scripts {
    <script>
        let autoSaveTimer;
        const autoSaveDelay = 3000; // Save after 3 seconds of inactivity
        let lastSavedContent = ''; // Track last saved content to avoid unnecessary saves
        let savingInProgress = false;
        const saveStatus = document.getElementById('saveStatus');
        
        // Function to show save status
        function showSaveStatus(status, message) {
            saveStatus.textContent = message;
            saveStatus.className = 'save-status ' + status;
            
            if (status === 'saved') {
                // Hide the status after 3 seconds
                setTimeout(() => {
                    saveStatus.style.opacity = '0';
                }, 3000);
            }
        }
        
        // Function to perform auto-save
        function performAutoSave() {
            if (savingInProgress) return;
            
            const title = document.getElementById('Title').value;
            const content = document.getElementById('Content').value;
            const description = document.getElementById('Description').value;
            const url = document.getElementById('Url').value;
            const postId = document.getElementById('postId').value;
            
            // Don't save if nothing has changed or if both title and content are empty
            const currentContent = title + content + description;
            if (currentContent === lastSavedContent || (title.trim() === '' && content.trim() === '')) {
                return;
            }
            
            savingInProgress = true;
            showSaveStatus('saving', 'Saving...');
            
            const formData = new FormData();
            formData.append('Title', title);
            formData.append('Content', content);
            formData.append('Description', description);
            formData.append('Url', url);
            formData.append('PostId', postId);
            
            // Get the anti-forgery token
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            fetch('@Url.Action("AutoSave")', {
                method: 'POST',
                body: formData,
                headers: {
                    'RequestVerificationToken': token
                }
            })
            .then(response => response.json())
            .then(data => {
                savingInProgress = false;
                
                if (data.success) {
                    showSaveStatus('saved', 'Saved');
                    lastSavedContent = currentContent;
                    
                    // If this is a new draft, update the postId field
                    if (postId === '0' && data.postId) {
                        document.getElementById('postId').value = data.postId;
                    }
                } else {
                    showSaveStatus('error', 'Failed to save');
                }
            })
            .catch(error => {
                savingInProgress = false;
                showSaveStatus('error', 'Error: Could not save');
                console.error('Auto-save error:', error);
            });
        }
        
        // Initialize auto-save on input fields
        const inputElements = document.querySelectorAll('.title-input, .description-input, .content-input, .url-input');
        inputElements.forEach(el => {
            el.addEventListener('input', () => {
                clearTimeout(autoSaveTimer);
                autoSaveTimer = setTimeout(performAutoSave, autoSaveDelay);
            });
        });
        
        // Save before user leaves the page
        window.addEventListener('beforeunload', () => {
            performAutoSave();
        });
        
        // Initial content to compare against
        document.addEventListener('DOMContentLoaded', () => {
            const title = document.getElementById('Title').value;
            const content = document.getElementById('Content').value;
            const description = document.getElementById('Description').value;
            lastSavedContent = title + content + description;
            
            // Place cursor in title if empty
            if (!title) {
                document.getElementById('Title').focus();
            } else if (!content) {
                document.getElementById('Content').focus();
            }
        });

        document.querySelector('.upload-area').addEventListener('click', function() {
            document.getElementById('Image').click();
        });
        
        document.getElementById('Image').addEventListener('change', function() {
            if (this.files && this.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    document.querySelector('.upload-area i').classList.add('d-none');
                    document.querySelector('.upload-area div').classList.add('d-none');
                    document.querySelector('.upload-area').style.backgroundImage = `url(${e.target.result})`;
                    document.querySelector('.upload-area').style.backgroundSize = 'cover';
                    document.querySelector('.upload-area').style.backgroundPosition = 'center';
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
    </script>
}
