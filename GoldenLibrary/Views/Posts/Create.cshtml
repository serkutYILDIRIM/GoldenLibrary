@model PostCreateViewModel
@{
    ViewData["Title"] = "Write Your Story";
}

<div class="editor-container">
    <!-- Top Navigation Bar -->
    <div class="editor-navbar">
        <div class="editor-stats">
            <span id="wordCount">0 words</span>
            <span class="separator">•</span>
            <span id="characterCount">0 characters</span>
        </div>
        
        <div class="save-indicator" id="saveStatus">
            <span class="save-dot"></span>
            <span class="save-text">Saved</span>
        </div>
        
        <div class="draft-indicator" id="draftStatus" style="display: none;">
            <button class="btn btn-sm btn-link text-muted" id="restoreDraftBtn">
                <i class="bi bi-arrow-counterclockwise"></i> Restore unsaved draft
            </button>
        </div>
        
        <div class="editor-actions">
            <button class="btn btn-outline-secondary btn-sm rounded-pill me-2" id="previewBtn">Preview</button>
            <button class="btn btn-golden btn-sm rounded-pill" id="publishBtn">Publish</button>
        </div>
    </div>
    
    <!-- Simplified Minimalist Formatting Toolbar -->
    <div class="formatting-toolbar" id="formattingToolbar">
        <div class="toolbar-buttons">
            <button type="button" class="toolbar-button" data-command="bold" title="Bold (Ctrl+B)">
                <i class="bi bi-type-bold"></i>
            </button>
            <button type="button" class="toolbar-button" data-command="italic" title="Italic (Ctrl+I)">
                <i class="bi bi-type-italic"></i>
            </button>
            <button type="button" class="toolbar-button" data-command="heading" title="Heading">
                <i class="bi bi-type-h1"></i>
            </button>
            <button type="button" class="toolbar-button" data-command="subheading" title="Subheading">
                <i class="bi bi-type-h2"></i>
            </button>
            <button type="button" class="toolbar-button" data-command="orderedList" title="Numbered List">
                <i class="bi bi-list-ol"></i>
            </button>
            <button type="button" class="toolbar-button" data-command="unorderedList" title="Bullet List">
                <i class="bi bi-list-ul"></i>
            </button>
            <button type="button" class="toolbar-button" data-command="quote" title="Quote">
                <i class="bi bi-blockquote-left"></i>
            </button>
            <button type="button" class="toolbar-button" data-command="link" title="Link (Ctrl+K)">
                <i class="bi bi-link-45deg"></i>
            </button>
        </div>
        
        <!-- Link Input Form (initially hidden) -->
        <div class="link-form" id="linkForm">
            <input type="text" id="linkInput" placeholder="Paste or type a link...">
            <button type="button" id="applyLinkButton">Apply</button>
            <button type="button" id="cancelLinkButton">Cancel</button>
        </div>
    </div>
    
    <!-- Content Addition Button -->
    <div class="content-add-button" id="contentAddButton">
        <button class="add-button-trigger">
            <i class="bi bi-plus"></i>
        </button>
        <div class="add-button-menu">
            <button class="add-menu-item" data-content-type="image">
                <i class="bi bi-image"></i>
                <span>Image</span>
            </button>
            <button class="add-menu-item" data-content-type="video">
                <i class="bi bi-play-btn"></i>
                <span>Video</span>
            </button>
            <button class="add-menu-item" data-content-type="embed">
                <i class="bi bi-code-slash"></i>
                <span>Embed</span>
            </button>
            <button class="add-menu-item" data-content-type="code">
                <i class="bi bi-code-square"></i>
                <span>Code</span>
            </button>
            <button class="add-menu-item" data-content-type="divider">
                <i class="bi bi-hr"></i>
                <span>Divider</span>
            </button>
        </div>
    </div>
    
    <!-- Media Upload Dialog -->
    <div class="media-dialog" id="mediaDialog">
        <div class="media-dialog-content">
            <div class="media-dialog-header">
                <h5 id="mediaDialogTitle">Add Media</h5>
                <button type="button" class="close-dialog" id="closeMediaDialog">
                    <i class="bi bi-x"></i>
                </button>
            </div>
            <div class="media-dialog-body">
                <!-- Image Upload Pane -->
                <div id="imageUploadPane" class="media-pane">
                    <div class="upload-area" id="imageDropArea">
                        <input type="file" id="imageFileInput" accept="image/*" style="display: none;">
                        <i class="bi bi-cloud-arrow-up"></i>
                        <h5>Drag and drop an image</h5>
                        <p>or click here to upload</p>
                    </div>
                    <div class="mt-3">
                        <p class="text-muted">Or insert from URL:</p>
                        <div class="input-group">
                            <input type="text" id="imageUrlInput" class="form-control" placeholder="Paste image URL...">
                            <button class="btn btn-golden" id="insertImageUrlBtn">Insert</button>
                        </div>
                    </div>
                </div>
                
                <!-- Video Upload Pane -->
                <div id="videoUploadPane" class="media-pane">
                    <div class="mb-3">
                        <label for="videoUrlInput" class="form-label">Enter a YouTube or Vimeo URL:</label>
                        <input type="text" id="videoUrlInput" class="form-control" placeholder="https://www.youtube.com/watch?v=...">
                    </div>
                    <button class="btn btn-golden" id="insertVideoBtn">Insert Video</button>
                </div>
                
                <!-- Embed Upload Pane -->
                <div id="embedUploadPane" class="media-pane">
                    <div class="mb-3">
                        <label for="embedCodeInput" class="form-label">Paste embed code:</label>
                        <textarea id="embedCodeInput" class="form-control" rows="6" placeholder="<iframe src=..."></textarea>
                    </div>
                    <button class="btn btn-golden" id="insertEmbedBtn">Insert Embed</button>
                </div>
                
                <!-- Code Block Pane -->
                <div id="codeBlockPane" class="media-pane">
                    <div class="mb-3">
                        <label for="codeInput" class="form-label">Enter your code:</label>
                        <textarea id="codeInput" class="form-control" rows="10" placeholder="Write or paste your code here..."></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="codeLanguageSelect" class="form-label">Language (optional):</label>
                        <select id="codeLanguageSelect" class="form-select">
                            <option value="plain">Plain text</option>
                            <option value="javascript">JavaScript</option>
                            <option value="csharp">C#</option>
                            <option value="python">Python</option>
                            <option value="html">HTML</option>
                            <option value="css">CSS</option>
                            <option value="sql">SQL</option>
                            <option value="json">JSON</option>
                            <option value="xml">XML</option>
                        </select>
                    </div>
                    <button class="btn btn-golden" id="insertCodeBtn">Insert Code</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Content Editing Area -->
    <div class="editor-content">
        <form id="storyForm" asp-action="Create" method="post">
            <input type="hidden" asp-for="PostId" id="postId" />
            <input type="hidden" id="Title" name="Title" value="@Model?.Title" />
            <input type="hidden" id="Description" name="Description" value="@Model?.Description" />
            <input type="hidden" id="Content" name="Content" value="@Model?.Content" />
            <input type="hidden" id="Url" name="Url" value="@Model?.Url">
            <input type="hidden" id="Tags" name="Tags" value="@Model?.Tags">
            <input type="hidden" name="action" id="formAction" value="draft">
            @Html.AntiForgeryToken()
            
            <div class="title-area">
                <div id="titleEditor" class="editable-title" contenteditable="true" data-placeholder="Title">@Model?.Title</div>
            </div>
            
            <div class="subtitle-area">
                <div id="descriptionEditor" class="editable-subtitle" contenteditable="true" data-placeholder="Add a subtitle or description">@Model?.Description</div>
            </div>
            
            <div class="content-area">
                <div id="contentEditor" class="editable-content" contenteditable="true" data-placeholder="Tell your story...">@Model?.Content</div>
            </div>
            
            <div class="tag-selection-area">
                <h4 class="mb-3">Select Tags for Your Story</h4>
                <div class="tag-cloud">
                    @foreach (var tag in ViewBag.Tags)
                    {
                        <div class="tag-item">
                            <input type="checkbox" id="tag-@tag.TagId" class="tag-checkbox"
                                   name="tagIds" value="@tag.TagId"
                                   @(Model?.Tags != null && Model.Tags.Any(t => t.TagId == tag.TagId) ? "checked" : "")>
                            <label for="tag-@tag.TagId" class="tag-label">
                                <i class="bi bi-tag-fill"></i>
                                @tag.Text
                            </label>
                        </div>
                    }
                </div>
                <div class="tags-hint mt-2">
                    <i class="bi bi-info-circle"></i>
                    <span id="tagValidationMessage">Add at least one tag to publish your story</span>
                </div>
            </div>
        </form>
    </div>
</div>

<style>
    body {
        background-color: #fff;
    }
    
    .editor-container {
        width: 80%;
        margin: 0 auto;
        padding: 40px 0;
        max-width: 1000px;
    }
    
    /* Editor Navigation Bar */
    .editor-navbar {
        position: sticky;
        top: 70px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        margin-bottom: 30px;
        background-color: rgba(255, 255, 255, 0.98);
        border-bottom: 1px solid rgba(0,0,0,0.05);
        z-index: 900;
    }
    
    .editor-stats {
        font-size: 14px;
        color: #6c757d;
    }
    
    .separator {
        margin: 0 8px;
    }
    
    .save-indicator {
        display: flex;
        align-items: center;
        font-size: 14px;
        color: #6c757d;
    }
    
    .save-dot {
        display: inline-block;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: #28a745;
        margin-right: 8px;
    }
    
    .save-indicator.saving .save-dot {
        background-color: #ffc107;
        animation: pulse 1s infinite;
    }
    
    .save-indicator.error .save-dot {
        background-color: #dc3545;
    }
    
    @@keyframes pulse {
        0% { opacity: 0.5; }
        50% { opacity: 1; }
        100% { opacity: 0.5; }
    }
    
    /* Content Editing Area */
    .title-area, .subtitle-area, .content-area {
        margin-bottom: 30px;
    }
    
    /* Contenteditable elements */
    [contenteditable] {
        outline: none;
        cursor: text;
        border: none;
        resize: none;
        overflow: hidden;
        transition: all 0.2s ease;
    }
    
    [contenteditable]:empty:before {
        content: attr(data-placeholder);
        color: #adb5bd;
        position: absolute;
        pointer-events: none;
    }
    
    .editable-title {
        font-family: 'Montserrat', sans-serif;
        font-weight: 700;
        font-size: 45px;
        line-height: 1.2;
        padding: 0;
        margin-bottom: 20px;
        min-height: 60px;
        position: relative;
        width: 100%;
        transition: height 0.2s ease;
    }
    
    .editable-title:empty:before {
        font-size: 45px;
    }
    
    .editable-subtitle {
        font-family: 'Merriweather', serif;
        font-size: 22px;
        color: #6c757d;
        padding: 0;
        margin-bottom: 30px;
        min-height: 40px;
        position: relative;
        width: 100%;
    }
    
    .editable-subtitle:empty:before {
        font-size: 22px;
        color: #adb5bd;
    }
    
    .editable-content {
        font-family: 'Merriweather', serif;
        font-size: 20px;
        line-height: 1.8;
        min-height: 300px;
        padding: 0;
        position: relative;
        width: 100%;
    }
    
    .editable-content:empty:before {
        font-size: 20px;
    }
    
    /* Focus styles - more subtle, minimalistic approach */
    .editable-title:focus, .editable-subtitle:focus, .editable-content:focus {
        border-left: 2px solid #d4af37;
        padding-left: 8px;
        transition: all 0.2s ease;
    }
    
    /* Clean white space around editor content */
    .editor-content {
        background-color: #fff;
        padding: 20px 0;
    }
    
    /* Image upload */
    .image-upload-label {
        display: inline-flex;
        align-items: center;
        padding: 8px 16px;
        border: 1px dashed #d4af37;
        border-radius: 4px;
        color: #6c757d;
        cursor: pointer;
        transition: all 0.2s;
    }
    
    .image-upload-label:hover {
        background-color: rgba(212, 175, 55, 0.05);
    }
    
    .image-upload-label i {
        margin-right: 8px;
    }
    
    /* Golden theme button */
    .btn-golden {
        background-color: #d4af37;
        border-color: #d4af37;
        color: white;
    }
    
    .btn-golden:hover {
        background-color: #c39e26;
        border-color: #c39e26;
        color: white;
    }

    /* Hide the save-status div from the old implementation */
    .save-status {
        display: none;
    }
    
    /* Minimalist Formatting Toolbar - Updated Styles */
    .formatting-toolbar {
        position: absolute;
        background: white;
        border-radius: 4px;
        box-shadow: 0 1px 4px rgba(0,0,0,0.1);
        padding: 4px;
        display: flex;
        align-items: center;
        transition: opacity 0.2s ease, transform 0.2s ease;
        opacity: 0;
        transform: translateY(10px) scale(0.95);
        pointer-events: none;
        z-index: 1000;
        border: 1px solid rgba(0,0,0,0.08);
    }
    
    .formatting-toolbar.visible {
        opacity: 1;
        transform: translateY(0) scale(1);
        pointer-events: auto;
    }
    
    .toolbar-buttons {
        display: flex;
        align-items: center;
    }
    
    .toolbar-button {
        background: transparent;
        border: none;
        width: 28px;
        height: 28px;
        border-radius: 4px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #495057;
        transition: all 0.15s ease;
        margin: 0 2px;
    }
    
    .toolbar-button:hover {
        background-color: #f8f9fa;
        color: #212529;
    }
    
    .toolbar-button.active {
        background-color: rgba(212, 175, 55, 0.1);
        color: #d4af37;
    }
    
    /* Link Form - Updated for minimalist look */
    .link-form {
        display: none;
        padding: 0 6px;
        align-items: center;
    }
    
    .link-form.visible {
        display: flex;
    }
    
    .link-form input {
        border: none;
        padding: 4px 8px;
        margin-right: 6px;
        min-width: 220px;
        font-size: 14px;
        border-bottom: 1px solid #e9ecef;
    }
    
    .link-form input:focus {
        outline: none;
        border-bottom-color: #d4af37;
    }
    
    .link-form button {
        background: transparent;
        border: none;
        font-size: 13px;
        padding: 3px 6px;
        cursor: pointer;
        border-radius: 4px;
    }
    
    .link-form button:first-of-type {
        color: #d4af37;
        font-weight: 500;
    }
    
    .link-form button:first-of-type:hover {
        background-color: rgba(212, 175, 55, 0.1);
    }
    
    .link-form button:last-of-type:hover {
        background-color: #f8f9fa;
    }
    
    /* Content Addition Button */
    .content-add-button {
        position: absolute;
        left: -50px;
        z-index: 800;
        transition: all 0.3s ease;
    }
    
    .add-button-trigger {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background-color: white;
        border: 1px solid #e9ecef;
        color: #6c757d;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        transition: all 0.2s ease;
    }
    
    .add-button-trigger:hover {
        background-color: #f8f9fa;
        color: #d4af37;
        transform: scale(1.05);
    }
    
    .add-button-trigger i {
        font-size: 18px;
    }
    
    .add-button-menu {
        position: absolute;
        left: 46px;
        top: 0;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        border: 1px solid #e9ecef;
        padding: 8px 0;
        min-width: 160px;
        opacity: 0;
        visibility: hidden;
        transform: translateX(-10px);
        transition: all 0.2s ease;
    }
    
    .content-add-button.open .add-button-menu {
        opacity: 1;
        visibility: visible;
        transform: translateX(0);
    }
    
    .add-menu-item {
        display: flex;
        align-items: center;
        padding: 8px 16px;
        border: none;
        background: none;
        width: 100%;
        text-align: left;
        cursor: pointer;
        transition: background-color 0.15s ease;
    }
    
    .add-menu-item:hover {
        background-color: #f8f9fa;
    }
    
    .add-menu-item i {
        margin-right: 10px;
        color: #d4af37;
        font-size: 16px;
    }
    
    /* Media upload dialog */
    .media-dialog {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1100;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease;
    }
    
    .media-dialog.visible {
        opacity: 1;
        visibility: visible;
    }
    
    .media-dialog-content {
        background-color: white;
        border-radius: 8px;
        max-width: 600px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        transform: translateY(-20px);
        transition: transform 0.3s ease;
    }
    
    .media-dialog.visible .media-dialog-content {
        transform: translateY(0);
    }
    
    .media-dialog-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 16px 20px;
        border-bottom: 1px solid #e9ecef;
    }
    
    .media-dialog-header h5 {
        margin: 0;
        font-weight: 600;
    }
    
    .close-dialog {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
        color: #6c757d;
    }
    
    .media-dialog-body {
        padding: 20px;
    }
    
    .media-pane {
        display: none;
    }
    
    .media-pane.active {
        display: block;
    }
    
    .upload-area {
        border: 2px dashed #e9ecef;
        border-radius: 8px;
        padding: 40px 20px;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease;
    }
    
    .upload-area:hover {
        border-color: #d4af37;
        background-color: rgba(212, 175, 55, 0.02);
    }
    
    .upload-area i {
        font-size: 36px;
        color: #d4af37;
        margin-bottom: 10px;
    }
    
    /* Content elements styling */
    .editable-content .media-container {
        margin: 30px 0;
        text-align: center;
    }
    
    .editable-content .media-container img {
        max-width: 100%;
        border-radius: 4px;
    }
    
    .editable-content .video-container {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 aspect ratio */
        height: 0;
        overflow: hidden;
        margin: 30px 0;
    }
    
    .editable-content .video-container iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: none;
        border-radius: 4px;
    }
    
    .editable-content .embed-container {
        margin: 30px 0;
    }
    
    .editable-content pre.code-block {
        background-color: #f8f9fa;
        border-radius: 4px;
        padding: 16px;
        margin: 30px 0;
        overflow-x: auto;
        font-family: monospace;
        font-size: 14px;
        line-height: 1.5;
        border-left: 3px solid #d4af37;
    }
    
    .editable-content .content-divider {
        margin: 30px 0;
        border: 0;
        height: 1px;
        background: #e9ecef;
        position: relative;
        text-align: center;
    }
    
    .editable-content .content-divider::before {
        content: '•••';
        position: absolute;
        top: -10px;
        background: white;
        padding: 0 10px;
        color: #adb5bd;
        font-size: 14px;
    }
    
    /* Tags Input Styling */
    .tags-hint {
        font-size: 13px;
        color: #6c757d;
    }
    
    /* Style for tag checkboxes */
    .form-check {
        margin-right: 8px;
        margin-bottom: 8px;
        background-color: rgba(212, 175, 55, 0.05);
        border: 1px solid rgba(212, 175, 55, 0.1);
        border-radius: 20px;
        padding: 5px 12px;
        transition: all 0.2s ease;
    }
    
    .form-check:hover {
        background-color: rgba(212, 175, 55, 0.1);
    }
    
    .form-check-input:checked + .form-check-label {
        font-weight: 500;
        color: #d4af37;
    }
    
    .form-check-input {
        margin-top: 0.2em;
    }
    
    .form-check-label {
        font-family: 'Montserrat', sans-serif;
        font-size: 14px;
        transition: color 0.2s ease;
    }
    
    /* Publish button states */
    .btn-golden.disabled {
        background-color: rgba(212, 175, 55, 0.5);
        border-color: rgba(212, 175, 55, 0.5);
        cursor: not-allowed;
        opacity: 0.8;
    }
    
    .btn-golden.valid {
        background-color: #28a745;
        border-color: #28a745;
    }
    
    .btn-golden.valid:hover {
        background-color: #218838;
        border-color: #1e7e34;
    }
    
    /* Tag validation styling */
    .tag-validation-error {
        color: #dc3545;
        font-weight: 500;
        animation: fadeIn 0.3s ease-in;
        padding: 5px 10px;
        border-radius: 4px;
        background-color: rgba(220, 53, 69, 0.1);
        border-left: 3px solid #dc3545;
    }
    
    .tag-selection-area.error .tag-cloud {
        border: 1px solid rgba(220, 53, 69, 0.3);
        background-color: rgba(220, 53, 69, 0.05);
        border-radius: 6px;
        padding: 10px;
    }
    
    .tag-selection-area .tag-item:hover {
        transform: translateY(-2px);
        transition: transform 0.2s ease;
    }
    
    .tags-hint i.error-icon {
        color: #dc3545;
    }
    
    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(-5px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    /* Tag selection success indicator */
    .tag-selection-complete {
        color: #28a745;
        font-weight: 500;
    }
</style>

@section Scripts {
    <script src="~/js/rich-editor.js"></script>
    <script src="~/js/rich-editor-media.js"></script>
    <script>
        // Variables for auto-save
        let autoSaveTimer;
        let localSaveTimer;
        const autoSaveDelay = 3000; // 3 seconds
        const localSaveDelay = 1000; // 1 second
        let lastSavedContent = '';
        let savingInProgress = false;
        const saveStatus = document.querySelector('.save-indicator');
        const draftStatus = document.getElementById('draftStatus');
        const restoreDraftBtn = document.getElementById('restoreDraftBtn');
        const DEBUG = true; // Enable debug logging
        let localStorageAvailable = false;
        
        // Declare publishBtn globally for immediate access
        const publishBtn = document.getElementById('publishBtn');
        
        // Check if localStorage is available and working
        function checkStorageAvailability() {
            try {
                const storage = window.localStorage;
                const testKey = "__storage_test__";
                storage.setItem(testKey, testKey);
                storage.removeItem(testKey);
                if (DEBUG) console.log("localStorage is available");
                return true;
            } catch (e) {
                if (DEBUG) console.error("localStorage is not available:", e);
                return false;
            }
        }
        
        // Get the post ID for storage keys
        const getPostKey = () => {
            const postId = document.getElementById('postId').value;
            return postId !== '0' ? `post_draft_${postId}` : 'new_post_draft';
        };
        
        // Execute immediate check for tag selection on page load 
        // This makes sure publish button state is correct even before DOMContentLoaded
        (function() {
            // Get all checked tag checkboxes
            const checkedTagElements = document.querySelectorAll('.tag-checkbox:checked');
            // If we have checked tags, enable publish button immediately
            if (checkedTagElements && checkedTagElements.length > 0) {
                if (publishBtn) {
                    publishBtn.classList.remove('disabled');
                    publishBtn.classList.add('valid');
                    publishBtn.disabled = false;
                    console.log(`Initial check: ${checkedTagElements.length} tags already selected, enabling publish button`);
                }
            }
        })();
        
        // LocalStorage functions with enhanced error handling
        const localStorageDraft = {
            // ...existing code...
        };
        
    </script>
}
