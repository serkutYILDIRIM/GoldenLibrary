@model IEnumerable<GoldenLibrary.Entity.Post>

@{
    ViewData["Title"] = "Admin - Manage Posts";
}

<div class="row">
    <div class="col-md-12">
        <div class="bg-white p-4 p-md-5 rounded">
            <h1 class="display-6 fw-bold mb-4">Manage Posts</h1>
            
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Published On</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var post in Model)
                        {
                            <tr>
                                <td>@post.Title</td>
                                <td>@post.User.Name</td>
                                <td>@post.PublishedOn.ToString("MMM d, yyyy")</td>
                                <td>
                                    <span class="badge @(post.IsActive ? "bg-success" : "bg-danger")">
                                        @(post.IsActive ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td>
                                    <button class="btn btn-sm @(post.IsActive ? "btn-outline-danger" : "btn-outline-success") toggle-status" 
                                            data-post-id="@post.PostId" data-is-active="@post.IsActive.ToString().ToLower()">
                                        @(post.IsActive ? "Deactivate" : "Activate")
                                    </button>
                                    <a href="/posts/details/@post.Url" class="btn btn-sm btn-outline-primary ms-1">Details</a>
                                    <a href="/posts/edit/@post.PostId" class="btn btn-sm btn-outline-secondary ms-1">Edit</a>
                                    <button class="btn btn-sm btn-outline-danger ms-1 delete-post" 
                                            data-post-id="@post.PostId" data-post-title="@post.Title">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @* First, make sure jQuery is loaded *@
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" 
            integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" 
            crossorigin="anonymous"></script>
            
    <script>
        // Use document ready with a check for jQuery
        document.addEventListener('DOMContentLoaded', function() {
            // Check if jQuery is loaded
            if (typeof jQuery !== 'undefined') {
                // Use jQuery
                jQuery(function($) {
                    console.log('jQuery is loaded and ready');
                    
                    $('.toggle-status').on('click', function() {
                        const button = $(this);
                        const postId = button.data('post-id');
                        
                        // Show feedback to user
                        button.prop('disabled', true).text('Processing...');
                        
                        // Get the token
                        const token = $('input[name="__RequestVerificationToken"]').val();
                        console.log('Token:', token ? 'Found' : 'Not found');
                        console.log('Sending request for post ID:', postId);
                        
                        // Send request
                        $.ajax({
                            url: '/Posts/TogglePostStatus',
                            type: 'POST',
                            data: JSON.stringify({ id: postId }),
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            headers: {
                                'RequestVerificationToken': token
                            },
                            success: function(data) {
                                console.log('Response:', data);
                                if (data.success) {
                                    // Update UI
                                    if (data.isActive) {
                                        button.removeClass('btn-outline-success').addClass('btn-outline-danger');
                                        button.text('Deactivate');
                                        button.closest('tr').find('.badge').removeClass('bg-danger').addClass('bg-success').text('Active');
                                    } else {
                                        button.removeClass('btn-outline-danger').addClass('btn-outline-success');
                                        button.text('Activate');
                                        button.closest('tr').find('.badge').removeClass('bg-success').addClass('bg-danger').text('Inactive');
                                    }
                                    button.data('is-active', data.isActive.toString().toLowerCase());
                                    
                                    // Show success message
                                    console.log('Status update successful:', data.message);
                                } else {
                                    alert('Failed to update post status: ' + data.message);
                                    console.error('Server error:', data.message);
                                }
                                button.prop('disabled', false);
                            },
                            error: function(xhr, status, error) {
                                console.error('AJAX error:', xhr.status, xhr.responseText);
                                alert('Error occurred while updating post status. Check console for details.');
                                button.prop('disabled', false);
                            }
                        });
                    });
                    
                    // Delete post functionality
                    $('.delete-post').on('click', function() {
                        const button = $(this);
                        const postId = button.data('post-id');
                        const postTitle = button.data('post-title');
                        
                        // Show confirmation dialog
                        if (confirm(`Are you sure you want to delete the post "${postTitle}"? This action cannot be undone.`)) {
                            // Show feedback to user
                            button.prop('disabled', true).text('Deleting...');
                            
                            // Get the token
                            const token = $('input[name="__RequestVerificationToken"]').val();
                            
                            // Send delete request
                            $.ajax({
                                url: '/Posts/DeletePost',
                                type: 'POST',
                                data: JSON.stringify({ id: postId }),
                                contentType: 'application/json; charset=utf-8',
                                dataType: 'json',
                                headers: {
                                    'RequestVerificationToken': token
                                },
                                success: function(data) {
                                    console.log('Response:', data);
                                    if (data.success) {
                                        // Remove the row from the table
                                        button.closest('tr').fadeOut(400, function() {
                                            $(this).remove();
                                        });
                                        
                                        // Show success message
                                        console.log('Delete successful:', data.message);
                                    } else {
                                        alert('Failed to delete post: ' + data.message);
                                        console.error('Server error:', data.message);
                                        button.prop('disabled', false).text('Delete');
                                    }
                                },
                                error: function(xhr, status, error) {
                                    console.error('AJAX error:', xhr.status, xhr.responseText);
                                    alert('Error occurred while deleting post. Check console for details.');
                                    button.prop('disabled', false).text('Delete');
                                }
                            });
                        }
                    });
                    
                    console.log('Anti-forgery token element exists:', $('input[name="__RequestVerificationToken"]').length > 0);
                });
            } else {
                console.error('jQuery is not loaded! Using plain JavaScript instead.');
                
                // Plain JS fallback for critical functionality
                document.querySelectorAll('.toggle-status, .delete-post').forEach(function(button) {
                    button.addEventListener('click', function() {
                        alert('jQuery is required for this functionality. Please check the console for errors.');
                        console.error('jQuery is required for AJAX functionality.');
                    });
                });
            }
        });
    </script>
    
    @Html.AntiForgeryToken()
}
